@page "/MimicProfiles"
@using BookStore.MimicProfiles
@using BookStore.MimicDiagrams
@using BookStore.Localization
@using Microsoft.Extensions.Localization
@using System.Globalization
@using Polly
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Calendars
@using Syncfusion.Blazor.Buttons
@using System.ComponentModel.DataAnnotations
@inherits BookStoreComponentBase

@if (Loading)
{
    <Row>
        <Div Flex="Flex.JustifyContent.Center" TextColor="TextColor.Warning">
            <Div Class="spinner-border me-2"></Div>
            <Span Style="display:inline-block; vertical-align:super">@L["Loading"]</Span>
            </Div>
        </Row>
}
else
{
    <Syncfusion.Blazor.Grids.SfGrid @ref="Grid" DataSource="@MimicProfileList" AllowPaging="true" Toolbar="@(new string[] {"Add", "Edit" ,"Delete","Update","Cancel" })">
        <GridEvents OnActionBegin="ActionBeginHandler" TValue="MimicProfileDto"></GridEvents>
        <GridEditSettings AllowAdding="true" AllowDeleting="true" AllowEditing="true" Mode="EditMode.Dialog" Dialog="DialogParams">
            <Validator>

                @{
                    ValidatorTemplateContext txt = context as ValidatorTemplateContext;
                }
                @* <BookStore.Blazor.Shared.Common.MyCustomValidator context="@txt"></BookStore.Blazor.Shared.Common.MyCustomValidator> *@

                @* <ValidationMessage style="color:red" For="@(() => (txt.Data as MimicProfileDto).MimicProfileName)"></ValidationMessage> *@
            </Validator>
            <HeaderTemplate>
                @{
                    var text = GetHeader((context as MimicProfileDto));
                    <Span>@text</Span>
                }
            </HeaderTemplate>
            <Template>
                @{
                    var mimicProfile = (context as MimicProfileDto);
                    <div>
                        <div class="row">
                            <div class="form-group col-md-12">
                                <SfTextBox @bind-Value="@mimicProfile.MimicProfileName" Placeholder="@L["Profile Name"]" />
                            
                                </div>
                        </div>

                        <div class="row">
                            <div class="form-group col-md-12">
                                <SfMultiSelect TItem="MimicDiagramDto" @bind-Value="MimicDiagramResult" TValue="int[]" Placeholder="@L["Select"]" Mode="VisualMode.CheckBox" DataSource="@MimicDiagramList" ShowDropDownIcon=true>
                                    <MultiSelectFieldSettings Value="Id" Text="MimicDiagramName"></MultiSelectFieldSettings>
                                </SfMultiSelect>
                            </div>
                        </div>
                    </div>
                }
            </Template>
        </GridEditSettings>
        <GridColumns>
            <GridColumn Width="100px" />
            <GridColumn Field="@nameof(MimicProfileDto.Id)" HeaderText="Id" IsPrimaryKey="true" Visible="false" AllowAdding="false" AllowEditing="false" />
            <GridColumn Field="@nameof(MimicProfileDto.MimicProfileName)" HeaderText="@L["Profile Name"]" />
            <GridColumn Field="@nameof(MimicProfileDto.MimicProfileDetail)" HeaderText="MimicDetails" />
        </GridColumns>
    </Syncfusion.Blazor.Grids.SfGrid>

    <SfDialog Width="250px" ShowCloseIcon="true" IsModal="true" @bind-Visible="@IsVisible">
        <DialogTemplates>
            <Header> @L["Confirmation Message"] </Header>
            <Content> @L["Are you sure about deleting this Profile?"] </Content>
        </DialogTemplates>
        <DialogButtons>
            <DialogButton Content="@L["OK"]" IsPrimary="true" OnClick="@OkClick" />
            <DialogButton Content="@L["Cancel"]" OnClick="@CancelClick" />
        </DialogButtons>
    </SfDialog>
}
